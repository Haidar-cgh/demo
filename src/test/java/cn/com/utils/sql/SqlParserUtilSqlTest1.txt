

---------19年一月份后欠费用户
DROP TABLE DW_OWE_BILL_BSS_08;

Create Table DW_OWE_BILL_BSS_07 as(
SELECT * FROM TD_B_OWE_BILL_BSS_07 WHERE OWE_MONTH>=201901 /* 工 */
);

---------汇总欠费账期、欠费总金额
Create Table DW_OWE_BILL_BSS_07_all as(     -- 陈国海 
/*
/*
aaa
*/
*/
SELECT *
  FROM (SELECT a.subs_instance_id user_id,
               MONTHS_BETWEEN(to_date(max(owe_month), 'yyyymm'),
                              to_date(min(owe_month), 'yyyymm'))+1 cnt,
               sum(owe_fee) owe_fee_all,
               max(owe_month) max_owe_month,
               min(owe_month) min_owe_month
          FROM DW_OWE_BILL_BSS_07 a
         GROUP BY subs_instance_id) a
 right join DW_OWE_BILL_BSS_07 b
    on a.user_id = b.subs_instance_id);
-------欠费用户类别 公众用户
Create Table DW_OWE_BILL_BSS_07_01  AS(
SELECT * FROM DW_OWE_BILL_BSS_07_all   where cust_kind not in ('21','22'));
-------取用户主产品
Create Table DW_f_user_product_bss_07 AS(
SELECT * FROM (
select gg.*,g.product_name,row_number()over(partition by USER_ID order by gg.end_date desc) rn from tf_f_user_product_bss_07 gg,td_b_product_bss g
where gg.product_id=g.product_id  AND GG.PRODUCT_MODE='00'  ) W WHERE W.RN=1
);

------------关联主产品
Create Table  DW_OWE_BILL_BSS_07_product  as(
SELECT B.*,A.END_DATE,A.PRODUCT_NAME FROM DW_OWE_BILL_BSS_07_all B LEFT JOIN 
(select gg.* from DW_F_USER_PRODUCT_BSS_07 GG) A
ON A.USER_ID=B.USER_ID );
---------关联服务状态
Create Table  DW_OWE_BILL_BSS_07_pro_sta_all  as(
SELECT w.*,r.sta_start_date,r.sta_end_date,r.sta_update_time,r.state_name FROM 
(
select distinct user_id, t.cnt,t.owe_fee_all,t.MAX_owe_month,min(t.owe_month)min_owe_month,t.product_name,t.cust_kind from DW_OWE_BILL_BSS_07_PRODUCT t) w
left join 
(select a.user_id,a.start_date sta_start_date,a.end_date sta_end_date,a.update_time sta_update_time, b.state_name
  from tf_f_user_svcstate_bss_07 a, td_s_servicestate_bss b
 where a.state_code = b.state_code
   and a.service_id = b.service_id
   and substr(a.end_date, 1, 6) > '2020'
   and a.main_tag = '1') r
   on w.user_id=r.user_id);


--------------------------取集团用户



---------19年一月份后欠费用户
DROP TABLE DW_02_OWE_BILL_BSS_07;

Create Table DW_02_OWE_BILL_BSS_07 as(
SELECT * FROM TD_B_OWE_BILL_BSS_07 WHERE cust_kind!='01' 
);

---------汇总欠费账期、欠费总金额
   Create Table Dw_02_Owe_Bill_Bss_07_Sum as (
   SELECT a.subs_instance_id user_id,a.account_id,
               MONTHS_BETWEEN(to_date(max(owe_month), 'yyyymm'),
                              to_date(min(owe_month), 'yyyymm'))+1 cnt,
               sum(owe_fee) owe_fee_all,
               min (owe_month) min_owe_month,
               max(owe_month) max_owe_month
          FROM DW_02_OWE_BILL_BSS_07 a 
         GROUP BY subs_instance_id,account_id);
    


Create Table DW_02_OWE_BILL_BSS_07_all as(    
SELECT *
  FROM (SELECT * from Dw_02_Owe_Bill_Bss_07_Sum) a
 right join DW_02_OWE_BILL_BSS_07 b 
    on a.user_id = b.subs_instance_id
    );
    


-------取用户主产品
Create Table DW_f_user_product_bss_07 AS(
SELECT * FROM (
select gg.*,g.product_name,row_number()over(partition by USER_ID order by gg.end_date desc) rn from tf_f_user_product_bss_07 gg,td_b_product_bss g
where gg.product_id=g.product_id  AND GG.PRODUCT_MODE='00'  ) W WHERE W.RN=1
);

------------关联主产品
Create Table  DW_02_OWE_BILL_BSS_201907_pro  as(
SELECT B.*,A.END_DATE,A.PRODUCT_NAME FROM Dw_02_Owe_Bill_Bss_07_Sum B LEFT JOIN 
(select gg.* from DW_F_USER_PRODUCT_BSS_07 GG) A
ON A.USER_ID=B.USER_ID );
---------关联服务状态
Create Table  DW_22_OWE_BILL_BSS_201907_sta  as(
SELECT w.*,r.sta_start_date,r.sta_end_date,r.sta_update_time,r.state_name FROM 
(
select distinct user_id, t.cnt,t.owe_fee_all,t.account_id,t.min_owe_month,t.MAX_owe_month,t.product_name,'22' cust_kind from DW_02_OWE_BILL_BSS_201907_pro t ) w
left join 
(select a.user_id,a.start_date sta_start_date,a.end_date sta_end_date,a.update_time sta_update_time, b.state_name
  from tf_f_user_svcstate_bss_07 a, td_s_servicestate_bss b
 where a.state_code = b.state_code
   and a.service_id = b.service_id
   and substr(a.end_date, 1, 6) > '201907'
   and substr(a.start_date,1,6)<='201907'
   and a.main_tag = '1') r
   on w.user_id=r.user_id);
   
SELECT count(1) cnt from WORKORDER_LIST_3710 t1 where 1=1  AND EXISTS (select t.dir_sn from cfg_audit_point t where t.dir_sn in( select t2.dir_sn from cfg_audit_dir t2 START WITH t2.dir_sn = '9A2DC707DD15AF4E6D3C497B039563BB'  CONNECT BY PRIOR t2.dir_sn = t2.parent_dir) and t.del_flag='0' and t.audit_sn = t1.audit_sn);


SELECT count(1) cnt from WORKORDER_LIST_3710 t1 where 1=1 AND (T1.step_deal = 'C0543TS009' or (T1.step_deal IN ('1220','1799850') and EXISTS (SELECT * from (SELECT DISTINCT t2.code FROM ums_domain t2 START WITH t2.code = '3716'  or t2.code IN ('3716','3716')   CONNECT BY PRIOR t2.code = t2.parent_domain_code) o1 where o1.code=t1.node_sn)));

INSERT INTO Persons VALUES ('Gates', 'Bill', 'Xuanwumen 10', 'Beijing');

INSERT INTO Persons (id,name,value,b) VALUES ('Gates', 'Bill', 'Xuanwumen 10', 'Beijing');

insert into newtb (district,districtid,town,townid,village,villageid)
select infotb.district,infotb.districtid,infotb.town,infotb.townid,infotb.village,dictionary.villageid
from infotb,dictionary
where infotb.village like dictionary.village and infotb.town like dictionary.town and infotb.districtid like dictionary.districtid;

ALTER TABLE Persons
ALTER COLUMN Birthday year;

ALTER TABLE Persons
ADD Birthday date;

ALTER TABLE Person
DROP COLUMN Birthday;

alter table test add primary key(id);

CREATE INDEX index_name
ON table_name (column_name);

CREATE INDEX PersonIndex
ON Person (LastName, FirstName);

CREATE VIEW view_name AS
SELECT a,b,c
FROM table_name
WHERE 1 = 1;

DELETE FROM Person WHERE LastName = 'Wilson';

UPDATE Person SET Address = 'Zhongshan 23', City = 'Nanjing'
WHERE LastName = 'Wilson';